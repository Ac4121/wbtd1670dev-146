@model FullStackApp.Server.Models.SessionTimes

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>SessionTimes</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form  asp-action="Create">

            <div asp-validation-summary="All" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="MovieId" class="control-label"></label>
                <select asp-for="MovieId" class="form-control" asp-items="ViewBag.MovieId"></select>
                <span asp-validation-for="MovieId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="StartDatetime" class="control-label"></label>
                <input asp-for="StartDatetime" class="form-control" />
                <span asp-validation-for="StartDatetime" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="EndDatetime" class="control-label"></label>
                <input asp-for="EndDatetime" class="form-control" />
                <span asp-validation-for="EndDatetime" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>
<script>
    const endDateTime = document.getElementById("EndDatetime");
    const startDateTime = document.getElementById("StartDatetime");

     function addHours(date, hoursToAdd) {
      console.log("date:" + date)
      const hoursToAdd2 = hoursToAdd * 60 * 60 * 1000;
      var date2 = new Date(date);
      
      date2.setTime(date2.getTime() + hoursToAdd2);
      
      // build into a local time zone datetime string
      
      var year =  date2.getFullYear().toString()
      var month = (date2.getMonth() + 1).toString()
      var day =  date2.getDate().toString()
      var hours = date2.getHours().toString()
      var mins = date2.getMinutes().toString()

      if (month.length == 1)
      {
          month = "0" + month
      }
         if (day.length == 1)
      {
          day = "0" + day
      }
         if (hours.length == 1)
      {
          hours = "0" + hours
      }
         if (mins.length == 1)
      {
          mins = "0" + mins
      }

      
      //Set to format YYYY-MM-DDT00:00
      date2 = year + "-" + month + "-" + day + "T" + hours + ":" + mins 
      console.log("date converted:" + date2)
      
      const re = /\d{4}-\d{2}-\d{2}T\d{2}:\d{2}/ 
      if (date2.match(re) != null)
      {
      date2 = date2.match(re)[0];
      console.log("After regex:" + date2);
      }
      else
      date2 = ""
      return date2;
    }

    startDateTime.addEventListener("change",(e) => {
              endDateTime.value = addHours(e.currentTarget.value,3);

        
    });
    //endDateTime.value = addHours(e.currentTarget.value,3);
    endDateTime.innerHTML;

    
    
</script>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
